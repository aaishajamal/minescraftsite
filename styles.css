from flask import Flask, jsonify, request
import random

app = Flask(__name__)

# Game state initialization
def initialize_deck():
    suits = ['H', 'D', 'C', 'S']
    ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']
    deck = [f"{rank}{suit}" for suit in suits for rank in ranks] * 2  # Two decks
    deck.append('JOKER')
    deck.append('JOKER')
    random.shuffle(deck)
    return deck

def deal_cards(deck):
    players = {'Player1': [], 'Player2': [], 'Player3': [], 'Player4': []}
    player_names = list(players.keys())
    dealer_index = 0
    for i in range(len(player_names)):
        players[player_names[i]] = [deck.pop() for _ in range(14 if i != dealer_index else 15)]
    
    stockpile = [deck.pop() for _ in range(10)]  # Initial stockpile cards
    discard_pile = [players[player_names[dealer_index]].pop()]
    
    return players, stockpile, discard_pile, player_names

game_state = {
    'players': {},
    'stockpile': [],
    'discard_pile': [],
    'current_player': '',
    'melded_cards': []
}

@app.route('/initialize', methods=['GET'])
def initialize_game():
    deck = initialize_deck()
    players, stockpile, discard_pile, player_names = deal_cards(deck)
    game_state['players'] = players
    game_state['stockpile'] = stockpile
    game_state['discard_pile'] = discard_pile
    game_state['current_player'] = player_names[1]  # Next player to play after dealer
    
    return jsonify({
        'players': game_state['players'],
        'stockpile': game_state['stockpile'],
        'discard_pile': game_state['discard_pile']
    })

@app.route('/meld', methods=['POST'])
def meld_cards():
    data = request.json
    cards_to_meld = data.get('cards', [])
    
    if len(cards_to_meld) < 3:
        return jsonify({'success': False, 'message': 'You need at least 3 cards to meld!'})
    
    current_player = game_state['current_player']
    player_hand = game_state['players'][current_player]
    
    if sum(card_value(card) for card in cards_to_meld) < 51:
        return jsonify({'success': False, 'message': 'The meld must total at least 51 points!'})

    game_state['melded_cards'].append(cards_to_meld)
    for card in cards_to_meld:
        if card in player_hand:
            player_hand.remove(card)
    
    return jsonify({
        'success': True,
        'player_hand': player_hand,
        'melded_cards': game_state['melded_cards']
    })

@app.route('/discard', methods=['POST'])
def discard_card():
    data = request.json
    card_to_discard = data.get('card')
    
    current_player = game_state['current_player']
    player_hand = game_state['players'][current_player]
    
    if card_to_discard in player_hand:
        player_hand.remove(card_to_discard)
        game_state['discard_pile'].append(card_to_discard)
        return jsonify({
            'success': True,
            'player_hand': player_hand,
            'discard_pile': game_state['discard_pile']
        })
    else:
        return jsonify({'success': False, 'message': 'Card not found in hand!'})

def card_value(card):
    value = card[:-1]
    if value in ['J', 'Q', 'K', 'A']:
        return 10
    elif value == 'JOKER':
        return 25
    return int(value)

if __name__ == '__main__':
    app.run(debug=True)
